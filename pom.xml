<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.trydent</groupId>
  <artifactId>io.citadel</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>Citadel</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.release>18</java.release>
    <maven.compiler.source>${java.release}</maven.compiler.source>
    <maven.compiler.target>${java.release}</maven.compiler.target>

    <mainClass>io.citadel.Main</mainClass>
    <final.name>citadel</final.name>

    <vertx.version>4.3.1</vertx.version>
    <eclipselink.version>3.0.2</eclipselink.version>
    <slf4j.version>1.8.0-beta4</slf4j.version>
    <log4j.version>2.17.2</log4j.version>
    <jackson.version>2.13.3</jackson.version>

    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <exec-plugin.version>3.0.0</exec-plugin.version>
    <vertx-plugin.version>1.0.23</vertx-plugin.version>
    <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
    <flyway.version>8.5.12</flyway.version>
    <hikaricp.version>5.0.1</hikaricp.version>
    <postgresql.version>42.3.4</postgresql.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-shell</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-jdbc-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-pg-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-sql-client-templates</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j18-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikaricp.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>${final.name}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>testCompile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <release>${java.release}</release>
          <compilerArgs>--enable-preview</compilerArgs>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <source>18</source>
          <target>18</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>versions</id>
            <phase>test</phase>
            <goals>
              <goal>display-dependency-updates</goal>
              <goal>display-plugin-updates</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-plugin.version}</version>
        <configuration>
          <mainClass>${mainClass}</mainClass>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>none</phase>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.34.1</version>
        <executions>
          <execution>
            <id>start-docker</id>
            <phase>compile</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-docker</id>
            <phase>clean</phase>
            <goals>
              <goal>stop</goal>
              <goal>volume-remove</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <logDate>default</logDate>
          <verbose>true</verbose>
          <imagePullPolicy>IfNotPresent</imagePullPolicy>
          <watchInterval>500</watchInterval>
          <volumes>
            <volume>
              <name>temp-volume</name>
              <driver>local</driver>
              <opts>
                <type>tmpfs</type>
                <device>tmpfs</device>
                <o>size=100m,uid=1000</o>
              </opts>
            </volume>
          </volumes>
          <images>
            <image>
              <alias>eventstore</alias>
              <name>postgres</name>
              <run>
                <namingStrategy>none</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${user.home}/sdk/dbms/eventstore:/var/lib/postgresql/model</volume>
                  </bind>
                </volumes>
                <env>
                  <POSTGRES_USER>eventstore</POSTGRES_USER>
                  <POSTGRES_PASSWORD>docker</POSTGRES_PASSWORD>
                  <POSTGRES_DB>eventstore</POSTGRES_DB>
                </env>
                <ports>
                  <port>5533:5432</port>
                </ports>
                <wait>
                  <time>10000</time>
                </wait>
                <log>
                  <prefix>eventstore Â» .</prefix>
                  <enabled>true</enabled>
                  <color>yellow</color>
                </log>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>${flyway.version}</version>
        <executions>
          <execution>
            <id>migration</id>
            <phase>compile</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <url>jdbc:postgresql://localhost:5533/eventstore</url>
          <user>eventstore</user>
          <password>docker</password>
          <locations>
            <location>filesystem:${project.basedir}/src/main/resources/migration/eventstore</location>
          </locations>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
